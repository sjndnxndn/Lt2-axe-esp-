-- CONFIG
local highlightColor = Color3.fromRGB(255, 0, 0)
local transparency = 0.5
local alwaysOnTop = true
local checkInterval = 5
local adornmentName = "AxeHighlight"

-- STATE
local highlightingEnabled = true

-- SERVICES
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- GUI SETUP
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AxeHighlighterGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 140, 0, 40)
ToggleButton.Position = UDim2.new(0, 10, 0, 100)
ToggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ToggleButton.BorderSizePixel = 0
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.Text = "Highlight: ON"
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 18
ToggleButton.Active = true

-- TOGGLE FUNCTIONALITY
ToggleButton.MouseButton1Click:Connect(function()
    highlightingEnabled = not highlightingEnabled
    ToggleButton.Text = "Highlight: " .. (highlightingEnabled and "ON" or "OFF")

    if not highlightingEnabled then
        for _, obj in pairs(game:GetDescendants()) do
            local adorn = obj:FindFirstChild(adornmentName)
            if adorn and adorn:IsA("BoxHandleAdornment") then
                adorn:Destroy()
            end
        end
    end
end)

-- DRAGGING FUNCTIONALITY
local dragging = false
local dragInput, mousePos, framePos

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        mousePos = input.Position
        framePos = ToggleButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - mousePos
        ToggleButton.Position = UDim2.new(
            framePos.X.Scale,
            framePos.X.Offset + delta.X,
            framePos.Y.Scale,
            framePos.Y.Offset + delta.Y
        )
    end
end)

-- HIGHLIGHT FUNCTION
local function highlightAxe(axe)
    if not highlightingEnabled then return end
    if axe:IsA("Tool") and axe:FindFirstChild("Handle") and not axe:FindFirstChild(adornmentName) and axe.Name:lower():find("axe") then
        local adornment = Instance.new("BoxHandleAdornment")
        adornment.Name = adornmentName
        adornment.Adornee = axe.Handle
        adornment.Color3 = highlightColor
        adornment.Transparency = transparency
        adornment.AlwaysOnTop = alwaysOnTop
        adornment.Size = axe.Handle.Size + Vector3.new(0.1, 0.1, 0.1)
        adornment.ZIndex = 10
        adornment.Parent = axe
    end
end

-- LOOP SCANNER
task.spawn(function()
    while true do
        if highlightingEnabled then
            for _, obj in ipairs(game:GetDescendants()) do
                pcall(function()
                    if obj:IsA("Tool") and obj:FindFirstChild("Handle") and obj.Name:lower():find("axe") then
                        highlightAxe(obj)
                    end
                end)
            end
        end
        task.wait(checkInterval)
    end
end)
