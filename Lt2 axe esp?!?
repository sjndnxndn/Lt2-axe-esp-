-- Axe Highlighter with GUI Toggle + Drag + Accurate Detection

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

repeat wait() until LocalPlayer:FindFirstChild("PlayerGui")

-- CONFIG
local highlightColor = Color3.fromRGB(255, 0, 0)
local transparency = 0.5
local alwaysOnTop = true
local checkInterval = 5
local adornmentName = "AxeHighlight"

local highlightingEnabled = true

-- GUI
local gui = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
gui.Name = "AxeHighlightGUI"
gui.ResetOnSpawn = false

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 140, 0, 40)
button.Position = UDim2.new(0, 10, 0, 100)
button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
button.BorderSizePixel = 0
button.TextColor3 = Color3.new(1, 1, 1)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 18
button.Text = "Highlight: ON"
button.Parent = gui

-- Toggle Highlighting
local function toggle()
    highlightingEnabled = not highlightingEnabled
    button.Text = "Highlight: " .. (highlightingEnabled and "ON" or "OFF")

    if not highlightingEnabled then
        for _, obj in pairs(game:GetDescendants()) do
            local adorn = obj:FindFirstChild(adornmentName)
            if adorn then adorn:Destroy() end
        end
    end
end

button.MouseButton1Click:Connect(toggle)

-- Drag Handling
local dragging, dragInput, startPos, startOffset

button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        startPos = input.Position
        startOffset = button.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - startPos
        button.Position = UDim2.new(
            startOffset.X.Scale,
            startOffset.X.Offset + delta.X,
            startOffset.Y.Scale,
            startOffset.Y.Offset + delta.Y
        )
    end
end)

-- Axe Highlighter Function
local function isAxe(tool)
    if not tool:IsA("Tool") then return false end
    if not tool:FindFirstChild("Handle") then return false end
    local name = tool.Name:lower()
    return name:find("axe") or name:find("birch") or name:find("silver") or name:find("end") or name:find("bees") or name:find("many")
end

local function highlightAxe(tool)
    if not highlightingEnabled then return end
    if isAxe(tool) and not tool:FindFirstChild(adornmentName) then
        local adorn = Instance.new("BoxHandleAdornment")
        adorn.Name = adornmentName
        adorn.Adornee = tool.Handle
        adorn.Size = tool.Handle.Size + Vector3.new(0.1, 0.1, 0.1)
        adorn.Color3 = highlightColor
        adorn.Transparency = transparency
        adorn.AlwaysOnTop = alwaysOnTop
        adorn.ZIndex = 10
        adorn.Parent = tool
    end
end

-- Scanner Loop
task.spawn(function()
    while true do
        if highlightingEnabled then
            for _, obj in ipairs(game:GetDescendants()) do
                pcall(function()
                    if obj:IsA("Tool") then
                        highlightAxe(obj)
                    end
                end)
            end
        end
        task.wait(checkInterval)
    end
end)

print("âœ… Axe Highlighter is running.")
