-- Full Axe ESP Script for Lumber Tycoon 2
-- Shows ESP for both held and dropped axes
-- Works in Delta Executor
-- Educational use only

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local RunService = game:GetService("RunService")

local AXE_COLOR = Color3.fromRGB(255, 215, 0)
local TEXT_SIZE = 16

-- Table to hold ESP data
local espData = {}

-- Helper: Create a Drawing text label
local function createESPText()
    local text = Drawing.new("Text")
    text.Size = TEXT_SIZE
    text.Center = true
    text.Outline = true
    text.Color = AXE_COLOR
    text.Visible = false
    return text
end

-- Helper: Determine if an instance is an axe (Tool or Model)
local function isAxe(instance)
    if instance:IsA("Tool") and instance.Name:lower():find("axe") then
        return true
    elseif instance:IsA("Model") and instance.Name:lower():find("axe") then
        return true
    end
    return false
end

-- Helper: Get the part to attach ESP to
local function getESPPart(obj)
    if obj:IsA("Tool") then
        return obj:FindFirstChild("Handle")
    elseif obj:IsA("Model") then
        return obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
    end
end

-- Cleanup removed axes
local function cleanupESP()
    for obj, data in pairs(espData) do
        if not obj:IsDescendantOf(game) then
            if data.text then data.text:Remove() end
            espData[obj] = nil
        end
    end
end

-- Main ESP loop
RunService.RenderStepped:Connect(function()
    cleanupESP()

    for _, obj in ipairs(Workspace:GetDescendants()) do
        if isAxe(obj) and not espData[obj] then
            local part = getESPPart(obj)
            if part then
                local text = createESPText()
                espData[obj] = {part = part, text = text}
            end
        end
    end

    for obj, data in pairs(espData) do
        local part = data.part
        if part and part:IsA("BasePart") and part:IsDescendantOf(Workspace) then
            local pos, onScreen = Camera:WorldToViewportPoint(part.Position)
            if onScreen then
                data.text.Position = Vector2.new(pos.X, pos.Y)
                data.text.Text = obj.Name
                data.text.Visible = true
            else
                data.text.Visible = false
            end
        else
            data.text.Visible = false
        end
    end
end)
